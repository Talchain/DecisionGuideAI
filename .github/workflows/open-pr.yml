name: Open Release Readiness PR

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  open:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const title = 'Release Readiness â€“ Finish Line (CI, Perf p95, Compare UX, Share-Cap E2E, Evidence)';
            let body = '';
            try { body = fs.readFileSync('PR_BODY.md', 'utf8'); } catch {}
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const head = 'feat/release-readiness';
            const base = 'main';
            // Gate on latest PoC UI Sweep being green for this branch
            const { data: runs } = await github.rest.actions.listWorkflowRuns({ owner, repo, workflow_id: 'poc-sweep.yml', branch: head, per_page: 1 });
            if (!runs.workflow_runs?.length || runs.workflow_runs[0].conclusion !== 'success') {
              core.notice('Skipping PR open/update: latest PoC UI Sweep is not green.');
              return;
            }
            // Find existing PR
            const { data: prs } = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${head}` });
            if (prs.length) {
              await github.rest.pulls.update({ owner, repo, pull_number: prs[0].number, title, body });
              core.setOutput('pr_url', prs[0].html_url);
              core.notice(`PR updated: ${prs[0].html_url}`);
            } else {
              const { data: pr } = await github.rest.pulls.create({ owner, repo, title, body, head, base });
              core.setOutput('pr_url', pr.html_url);
              core.notice(`PR created: ${pr.html_url}`);
            }
